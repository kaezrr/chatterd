// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Request {
  PENDING
  ACCEPTED
  REJECTED
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id               Int          @id @default(autoincrement())
  name             String       @unique
  password         String
  about            String?
  photoUrl         String?
  messagesSent     Message[]    @relation("MsgSent")
  messagesReceived Message[]    @relation("MsgReceive")
  friendsFrom      FriendShip[] @relation("FriendShipsUser1")
  friendsTo        FriendShip[] @relation("FriendShipsUser2")
}

model FriendShip {
  id     Int     @id @default(autoincrement())
  from   User    @relation("FriendShipsUser1", fields: [fromId], references: [id])
  to     User    @relation("FriendShipsUser2", fields: [toId], references: [id])
  fromId Int
  toId   Int
  status Request @default(PENDING)

  @@unique([fromId, toId])
}

model Message {
  id        Int      @id @default(autoincrement())
  fromId    Int
  toId      Int
  from      User     @relation("MsgSent", fields: [fromId], references: [id])
  to        User     @relation("MsgReceive", fields: [toId], references: [id])
  content   String
  createdAt DateTime @default(now())
}
